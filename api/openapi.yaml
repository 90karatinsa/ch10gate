openapi: 3.1.0
info:
  title: CH10 Gate Validator API
  version: "1.0"
  description: |
    Offline-ready validation API packaged via scripts/gate_bundle.sh for
    gated deliveries. The gate bundle ships this specification alongside
    binaries, schemas, and sample data to support acceptance QA.
paths:
  /upload:
    post:
      summary: Upload Chapter 10 or TMATS files
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Files to upload
              required: [files]
      responses:
        "200":
          description: Uploaded files registered as artifacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadResponse"
  /validate:
    post:
      summary: Validate inputs and produce diagnostics + acceptance
      parameters:
        - name: stream
          in: query
          schema: {type: boolean}
          description: When true, emit diagnostics as an application/x-ndjson stream.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [inputs, profile]
              properties:
                inputs:
                  type: array
                  items:
                    type: string
                  description: Artifact IDs or file paths for Chapter 10 inputs
                tmats:
                  type: string
                  description: Artifact ID or file path for TMATS metadata
                profile:
                  type: string
                  enum: ["106-09", "106-11", "106-13", "106-15", "106-20"]
                rulePack:
                  type: object
                  description: Optional rule pack payload overriding defaults
                includeTimestamps:
                  type: boolean
                  description: Include timestamp metadata in diagnostics output
      responses:
        "200":
          description: Acceptance JSON or NDJSON diagnostic stream
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateResponse"
            application/x-ndjson:
              schema:
                type: string
                description: Stream of Diagnostic entries followed by a summary object
  /auto-fix:
    post:
      summary: Apply auto-fixes where possible
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [input, profile]
              properties:
                input: {type: string}
                tmats: {type: string}
                profile: {type: string}
                rulePack: {type: object}
                dryRun: {type: boolean}
      responses:
        "200":
          description: Diagnostics and generated fix artifacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoFixResponse"
  /manifest:
    post:
      summary: Build a manifest with hashes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [inputs]
              properties:
                inputs: {type: array, items: {type: string}}
                shaAlgo:
                  type: string
                  enum: ["sha256", "sha512"]
                  default: "sha256"
                sign:
                  type: boolean
                  description: Request a detached JWS signature if the server is configured for manifest signing
      responses:
        "200":
          description: Manifest JSON with artifact references
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManifestResponse"
        "400":
          description: Invalid inputs or unsupported hash algorithm
        "503":
          description: Manifest signing requested but not configured on the server
  /profiles:
    get:
      summary: List supported profiles
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items: {type: string}
  /artifacts/{id}:
    get:
      summary: Download a previously generated artifact
      parameters:
        - name: id
          in: path
          required: true
          schema: {type: string}
      responses:
        "200":
          description: Artifact contents
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "404":
          description: Artifact not found
  /openapi.yaml:
    get:
      summary: Retrieve the OpenAPI specification
      responses:
        "200":
          content:
            application/yaml:
              schema:
                type: string
components:
  schemas:
    Diagnostic:
      type: object
      properties:
        ts: {type: string, format: date-time}
        file: {type: string}
        channelId: {type: integer}
        packetIndex: {type: integer}
        offset: {type: string}
        ruleId: {type: string}
        severity: {enum: ["ERROR", "WARN", "INFO"]}
        message: {type: string}
        refs: {type: array, items: {type: string}}
        fixSuggested: {type: boolean}
        fixApplied: {type: boolean}
        fixPatchId: {type: string}
        timestamp_us: {type: integer, format: int64}
        timestamp_source: {type: string}
    GateResult:
      type: object
      properties:
        ruleId: {type: string}
        name: {type: string}
        stage: {type: string}
        severity: {type: string}
        pass: {type: boolean}
        findings: {type: integer}
        refs: {type: array, items: {type: string}}
    AcceptanceReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            total: {type: integer}
            errors: {type: integer}
            warnings: {type: integer}
            pass: {type: boolean}
        gateMatrix:
          type: array
          items: {$ref: "#/components/schemas/GateResult"}
        findings:
          type: array
          items:
            $ref: "#/components/schemas/Diagnostic"
    ArtifactRef:
      type: object
      properties:
        id: {type: string}
        name: {type: string}
        contentType: {type: string}
        size: {type: integer, format: int64}
        kind: {type: string}
    ValidateResponse:
      type: object
      properties:
        acceptance:
          $ref: "#/components/schemas/AcceptanceReport"
        diagnostics: {type: integer}
        artifacts:
          type: array
          items:
            $ref: "#/components/schemas/ArtifactRef"
    AutoFixResponse:
      type: object
      properties:
        diagnostics:
          type: array
          items:
            $ref: "#/components/schemas/Diagnostic"
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/ArtifactRef"
    Manifest:
      type: object
      properties:
        createdAt: {type: string, format: date-time}
        shaAlgo: {type: string}
        items:
          type: array
          items:
            type: object
            properties:
              path: {type: string}
              size: {type: integer}
              sha256: {type: string}
              type: {type: string}
        signature:
          type: object
          properties:
            type: {type: string}
            certSubject: {type: string}
            issuer: {type: string}
            signatureFile: {type: string}
    ManifestResponse:
      type: object
      properties:
        manifest:
          $ref: "#/components/schemas/Manifest"
        manifestArtifact:
          $ref: "#/components/schemas/ArtifactRef"
        signatureArtifact:
          $ref: "#/components/schemas/ArtifactRef"
        artifact:
          $ref: "#/components/schemas/ArtifactRef"
          deprecated: true
    UploadResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: "#/components/schemas/ArtifactRef"
